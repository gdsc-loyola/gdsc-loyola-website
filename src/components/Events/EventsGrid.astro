---
import { Image } from "@astrojs/image/components";
import Section from "../Section.astro";
import { events } from "./data/events";
import EventCard from "./EventCard.astro";
import dayjs from "dayjs";
import CylinderLeft from "../Landing/Shapes/CylinderLeft.astro";
import BlockRight from "../Landing/Shapes/BlockRight.astro";

const processEvents = (
  evs: typeof events,
  options?: {
    yearsOnly?: boolean;
  }
) => {
  const map = evs.reduce(
    (acc, e) => {
      if (e.name in acc && acc[e.name]) {
        acc[e.name].dates.push(e.date);
      } else {
        acc[e.name] = { ...e, dates: [e.date] };
        delete (acc[e.name] as any).date;
      }

      return acc;
    },
    {} as Record<
      string,
      {
        name: string;
        dates: Array<string>;
        description: string;
        image: Promise<typeof import("*.png")>;
      }
    >
  );
  return Object.values(map).map((e) => ({
    ...e,
    dates: e.dates
      .sort((a, b) => {
        const aDate = dayjs(a);
        const bDate = dayjs(b);
        return aDate.isBefore(bDate) ? -1 : 1;
      })
      .map((d, i) => {
        if (options?.yearsOnly) {
          return dayjs(d).format("YYYY");
        }

        return i === 0 ? dayjs(d).format("MMM YYYY") : dayjs(d).format("YYYY");
      }),
  }));
};
const upcomingEvents = processEvents(
  events.filter((e) => {
    return dayjs(e.date).isAfter(new Date());
  })
);

const pastEvents = processEvents(
  events.filter((e) => {
    return dayjs(e.date).isBefore(new Date());
  }),
  {
    yearsOnly: true,
  }
);
---

<Section class="bg-blue-gradient">
  <CylinderLeft
    class="absolute right-[-5%] top-[8%] w-[10%] min-w-[100px] h-auto"
  />
  <Image
    src={import("../assets/donut-right.png") as any}
    format="webp"
    class="absolute left-[-5%] top-[34%] w-[10%] min-w-[100px] h-auto"
  />
  <BlockRight
    class="absolute right-[-1%] bottom-[3%] w-[14%] min-w-[100px] h-auto z-10 rotate-[-8deg]"
  />
  <div class="py-32 relative">
    <!-- <CylinderLeft
			class="absolute -right-[calc(_calc(100vw-100%)_*0.8)] w-[15%] min-w-[100px] h-auto"
		/>
		<Image
			src={import("../assets/donut-right.png") as any}
			format="webp"
			class="absolute -left-[calc(_calc(100vw-100%)_*0.8)] top-[40%] w-[15%] min-w-[100px] h-auto"
		/> -->

    <div>
      <h2 class="text-xl md:text-2xl font-bold text-center">Upcoming Events</h2>
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mt-6">
        {
          upcomingEvents.map((e) => {
            return (
              <EventCard
                dates={e.dates}
                description={e.description}
                image={e.image}
                name={e.name}
              />
            );
          })
        }
      </div>
    </div>

    <div class="mt-32">
      <h2 class="text-xl md:text-2xl font-bold text-center">Past Events</h2>
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 mt-6 gap-6">
        {
          pastEvents.map((e) => {
            return (
              <EventCard
                dates={e.dates}
                description={e.description}
                image={e.image}
                name={e.name}
              />
            );
          })
        }
      </div>
    </div>
  </div>
</Section>
